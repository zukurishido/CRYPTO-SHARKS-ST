// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
let isAuthenticated = false;
let isAdminPanelVisible = false;

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–º
function setAdminPassword(password) {
    const hashedPassword = btoa(password); // –ü—Ä–æ—Å—Ç–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    localStorage.setItem('adminPass', hashedPassword);
}

function checkAdminPassword(password) {
    const hashedPassword = localStorage.getItem('adminPass');
    return hashedPassword === btoa(password);
}

function initializeAdminPassword() {
    if (!localStorage.getItem('adminPass')) {
        setAdminPassword('Cr5pt0Sh@rks2024#AdminP@nel');
    }
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `notification ${type} fade-in`;
    notification.innerHTML = `
        <div class="notification-content">
            <span>${message}</span>
        </div>
    `;
    document.body.appendChild(notification);

    setTimeout(() => {
        notification.classList.add('fade-out');
        setTimeout(() => notification.remove(), 300);
    }, 2000);
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function toggleAdmin() {
    if (!isAuthenticated) {
        const password = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:');
        if (!checkAdminPassword(password)) {
            showNotification('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!', 'error');
            return;
        }
        isAuthenticated = true;
    }

    const panel = document.getElementById('adminPanel');
    isAdminPanelVisible = !isAdminPanelVisible;
    
    if (isAdminPanelVisible) {
        panel.classList.add('visible');
        updateAdminPanelInfo();
        showBulkInput(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    } else {
        panel.classList.remove('visible');
    }
}

// –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function logoutAdmin() {
    isAuthenticated = false;
    isAdminPanelVisible = false;
    const panel = document.getElementById('adminPanel');
    panel.classList.remove('visible');
    showNotification('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏');
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
function changeAdminPassword() {
    const currentPassword = prompt('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å:');
    if (!checkAdminPassword(currentPassword)) {
        showNotification('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å!', 'error');
        return;
    }

    const newPassword = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (–º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤):');
    if (!newPassword || newPassword.length < 8) {
        showNotification('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤!', 'error');
        return;
    }

    setAdminPassword(newPassword);
    showNotification('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!');
}

// –ü–æ–∫–∞–∑ —Ñ–æ—Ä–º—ã –º–∞—Å—Å–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
function showBulkInput() {
    document.querySelector('.admin-form').innerHTML = `
        <div class="input-group fade-in">
            <label>–ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–æ–∫</label>
            <textarea id="bulkInput" rows="15" placeholder="DEFI:üöÄ
1.#FIT +20%
2.#AMT +22%

FUTURES:üöÄ
1.#BNB +35% (5—Ö)
2.#CELO +76% (20—Ö)

SPOT:üöÄ
1.#TWT +35%
2.#NEAR -15%"></textarea>
            <button onclick="parseBulkTrades()" class="add-btn">
                –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Å–¥–µ–ª–∫–∏
            </button>
        </div>
    `;
}

// –ü–∞—Ä—Å–∏–Ω–≥ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å–¥–µ–ª–æ–∫
function parseBulkTrades() {
    const bulkText = document.getElementById('bulkInput').value;
    const trades = parseTrades(bulkText);

    if (trades.length === 0) {
        showNotification('–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è', 'error');
        return;
    }

    const year = document.getElementById('yearSelect').value;
    const month = document.getElementById('monthSelect').value;

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–¥–µ–ª–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const stats = trades.reduce((acc, trade) => {
        if (!acc[trade.category]) {
            acc[trade.category] = { count: 0, profit: 0, loss: 0 };
        }
        acc[trade.category].count++;
        if (trade.result > 0) acc[trade.category].profit += trade.result;
        if (trade.result < 0) acc[trade.category].loss += Math.abs(trade.result);
        return acc;
    }, {});

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    let confirmText = '–ù–∞–π–¥–µ–Ω—ã —Å–¥–µ–ª–∫–∏:\n\n';
    Object.entries(stats).forEach(([category, stat]) => {
        confirmText += `${category}:\n`;
        confirmText += `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${stat.count}\n`;
        if (stat.profit > 0) confirmText += `–ü—Ä–∏–±—ã–ª—å: +${stat.profit.toFixed(1)}%\n`;
        if (stat.loss > 0) confirmText += `–£–±—ã—Ç–æ–∫: -${stat.loss.toFixed(1)}%\n`;
        confirmText += '\n';
    });

    if (confirm(confirmText + '\n–î–æ–±–∞–≤–∏—Ç—å —ç—Ç–∏ —Å–¥–µ–ª–∫–∏?')) {
        trades.forEach((trade, index) => {
            setTimeout(() => {
                addTradeData(year, month, trade.category, trade);
                if (index === trades.length - 1) {
                    updateContent();
                    showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${trades.length} —Å–¥–µ–ª–æ–∫`);
                    document.getElementById('bulkInput').value = '';
                }
            }, index * 50); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        });
    }
}

// –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ —Å–¥–µ–ª–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function showTradesList() {
    const year = document.getElementById('yearSelect').value;
    const month = document.getElementById('monthSelect').value;
    const categories = ['SPOT', 'FUTURES', 'DeFi'];
    
    let html = '<div class="trades-list">';
    
    categories.forEach(category => {
        const trades = getPeriodData(year, month, category);
        if (trades.length > 0) {
            html += `
                <div class="category-section">
                    <h3>${category}</h3>
                    <div class="trades-grid">
            `;
            
            trades.forEach((trade, index) => {
                html += `
                    <div class="trade-item ${trade.status}">
                        <div class="trade-content">
                            <div class="trade-pair">#${trade.pair}</div>
                            <div class="trade-result">
                                ${trade.result > 0 ? '+' : ''}${trade.result}% 
                                ${trade.leverage ? `(${trade.leverage})` : ''}
                            </div>
                        </div>
                        <div class="trade-actions">
                            <button onclick="editTrade('${year}', '${month}', '${category}', ${index})" 
                                    class="edit-btn">
                                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                            <button onclick="deleteTrade('${year}', '${month}', '${category}', ${index})" 
                                    class="delete-btn">
                                –£–¥–∞–ª–∏—Ç—å
                            </button>
                        </div>
                    </div>
                `;
            });
            
            html += '</div></div>';
        }
    });
    
    html += '</div>';
    document.querySelector('.admin-form').innerHTML = html;
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏
function editTrade(year, month, category, index) {
    const trades = getPeriodData(year, month, category);
    const trade = trades[index];
    
    document.querySelector('.admin-form').innerHTML = `
        <div class="edit-form">
            <h3>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏</h3>
            <div class="input-group">
                <label>–ü–∞—Ä–∞</label>
                <input type="text" id="editPair" value="${trade.pair}">
            </div>
            <div class="input-group">
                <label>–†–µ–∑—É–ª—å—Ç–∞—Ç (%)</label>
                <input type="number" id="editResult" value="${trade.result}" step="0.1">
            </div>
            <div class="input-group">
                <label>–ö—Ä–∞—Ç–Ω–æ—Å—Ç—å (–¥–ª—è FUTURES)</label>
                <input type="text" id="editLeverage" value="${trade.leverage || ''}">
            </div>
            <div class="input-group">
                <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                <input type="text" id="editComment" value="${trade.comment || ''}">
            </div>
            <div class="button-group">
                <button onclick="saveTrade('${year}', '${month}', '${category}', ${index})" class="save-btn">
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
                <button onclick="showTradesList()" class="cancel-btn">
                    –û—Ç–º–µ–Ω–∞
                </button>
            </div>
        </div>
    `;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–¥–µ–ª–∫–∏
function saveTrade(year, month, category, index) {
    const updatedTrade = {
        pair: document.getElementById('editPair').value,
        result: parseFloat(document.getElementById('editResult').value),
        leverage: document.getElementById('editLeverage').value,
        comment: document.getElementById('editComment').value
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    updatedTrade.status = updatedTrade.result > 0 ? 'profit' : 
                         (updatedTrade.result < 0 ? 'loss' : 'neutral');

    if (updateTradeData(year, month, category, index, updatedTrade)) {
        showNotification('–°–¥–µ–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        showTradesList();
        updateContent();
    } else {
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏', 'error');
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏
function deleteTrade(year, month, category, index) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É —Å–¥–µ–ª–∫—É?')) {
        if (deleteTradeData(year, month, category, index)) {
            showNotification('–°–¥–µ–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞');
            showTradesList();
            updateContent();
        } else {
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏', 'error');
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    initializeAdminPassword();
});
